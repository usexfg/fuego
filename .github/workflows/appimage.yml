name: AppImage Linux

on:
  push:
    tags:
      - "*"

jobs:
  build-appimage:
    name: AppImage Linux
    runs-on: ubuntu-20.04  # Older base for better compatibility
    steps:
      - uses: actions/checkout@master

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libboost-all-dev wget fuse

      - name: Download AppImageTool
        run: |
          wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool

      - name: Build
        id: build
        run: |
          build_folder="build/"
          xfg_ver=$(echo ${{ github.ref }} | sed 's|refs/tags/||')
          release_name="fuego-cli-linux-appimage-v$xfg_ver"
          appdir="Fuego.AppDir"
          
          mkdir "$build_folder"
          cd "$build_folder"
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr ..
          make -j$(nproc)
          cd ..
          
          # Create AppDir structure
          mkdir -p "$appdir/usr/bin"
          mkdir -p "$appdir/usr/share/applications"
          mkdir -p "$appdir/usr/share/icons/hicolor/256x256/apps"
          
          # Copy binaries
          for f in build/src/*; do
            if [[ -x $f && -f $f ]]; then
              strip "$f"
              cp "$f" "$appdir/usr/bin/"
            fi
          done
          
          # Create desktop file
          cat > "$appdir/fuego.desktop" << 'EOF'
          [Desktop Entry]
          Type=Application
          Name=Fuego
          Exec=fuegod
          Icon=fuego
          Categories=Network;
          EOF
          
          # Create a simple icon (you might want to replace with actual icon)
          cat > "$appdir/usr/share/icons/hicolor/256x256/apps/fuego.png" << 'EOF'
          # Placeholder for icon - replace with actual PNG data
          EOF
          
          # Create AppRun
          cat > "$appdir/AppRun" << 'EOF'
          #!/bin/bash
          HERE="$(dirname "$(readlink -f "${0}")")"
          export PATH="${HERE}/usr/bin:${PATH}"
          exec "${HERE}/usr/bin/fuegod" "$@"
          EOF
          chmod +x "$appdir/AppRun"
          
          # Build AppImage
          ./appimagetool "$appdir" "$release_name.AppImage"
          
          sha256=$(sha256sum "$release_name.AppImage" | awk '{print toupper($1)}')
          asset_path="./$release_name.AppImage"
          echo "sha256=${sha256}" >> $GITHUB_OUTPUT
          echo "release_name=${release_name}.AppImage" >> $GITHUB_OUTPUT
          echo "asset_path=${asset_path}" >> $GITHUB_OUTPUT
          echo "xfg_version=${xfg_ver}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Fuego CLI Suite v${{ steps.build.outputs.xfg_ver }}
          body: |
            **${{ steps.build.outputs.release_name }}**
            ${{ steps.build.outputs.sha256 }}
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
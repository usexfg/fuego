name: Docker Build and Push

on:
  push:
    tags:
      - "v*"
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: usexfg/fuego

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_TYPE=Release
            ENABLE_OPTIMIZATIONS=ON

      - name: Generate Docker run instructions
        id: docker-info
        run: |
          xfg_ver=$(echo ${{ github.ref }} | sed 's|refs/tags/||')
          cat > docker-instructions.md << EOF
          # Fuego Docker Images v${xfg_ver}
          
          ## Quick Start
          \`\`\`bash
          # Run Fuego daemon
          docker run -d --name fuego-node \\
            -p 20808:20808 -p 28180:28180 \\
            -v fuego-data:/home/fuego/.fuego \\
            ghcr.io/${{ github.repository }}:${xfg_ver}
          
          # Run wallet CLI
          docker run -it --rm \\
            -v fuego-wallet:/home/fuego/.fuego \\
            ghcr.io/${{ github.repository }}:${xfg_ver} \\
            fuego-wallet-cli
          \`\`\`
          
          ## Available Images
          - \`fuego/fuego:${xfg_ver}\` (Docker Hub)
          - \`ghcr.io/${{ github.repository }}:${xfg_ver}\` (GitHub Container Registry)
          
          ## Architectures
          - linux/amd64 (Intel/AMD)
          - linux/arm64 (ARM64/Apple Silicon)
          EOF
          echo "instructions_file=docker-instructions.md" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.docker-info.outputs.instructions_file }}
          name: Fuego CLI Suite v${{ steps.meta.outputs.version }}
          body: |
            **Docker Images Published**
            
            Multi-architecture Docker images available:
            - `fuego/fuego:${{ steps.meta.outputs.version }}`
            - `ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }}`
            
            Supported platforms: linux/amd64, linux/arm64
          append_body: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 